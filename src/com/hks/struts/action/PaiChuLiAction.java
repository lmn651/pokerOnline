/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.hks.struts.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.han.domain.Desk;
import com.han.domain.User;

/** 
 * MyEclipse Struts
 * Creation date: 02-16-2017
 * 
 * XDoclet definition:
 * @struts.action
 */
public class PaiChuLiAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws IOException 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		// TODO Auto-generated method stub
		//得到当前的用户
		User user = (User) request.getSession().getAttribute("user");
		
		//得到当前的桌号
		int deskNo=user.deskNo;
		ArrayList<HashMap<String,String>> messageList = (ArrayList<HashMap<String,String>>) request.getServletContext().getAttribute("messageList");
		
		//得到该桌子的messageMap
		HashMap<String, String> messageMap = messageList.get(deskNo);
		messageMap.clear();
		
		//得到当前玩家的位置
		String weizhi2 = request.getParameter("weizhi");
		
		//得到当前游戏的轮数
		String count = request.getParameter("count");
		
		//得到当前不要的个数
		String buyao = request.getParameter("buyao");
		
		//得到当前牌局的状态
		String state = request.getParameter("state");
		
		//得到地主玩家的位置
		String dizhuweizhi = request.getParameter("dizhuweizhi");
		
		//得到牌路径(牌之间用link分隔)
		String paiPath = request.getParameter("paiPath");
		
		//System.out.println(paiPath+"**********");
		int weizhi = Integer.parseInt(weizhi2);
		
		messageMap.put("count", count);
		
		//把地主的位置存起来
		messageMap.put("dizhuweizhi", dizhuweizhi);
		
		//把出牌的玩家的位置存起来
		messageMap.put("paiWeiZhi", weizhi+"");
		
		//把用户的操作标记存起来
		messageMap.put("paiPath", paiPath);
		
		messageMap.put("buyao", buyao);
		
		messageList.add(deskNo, messageMap);
		
		if(paiPath.contains("label")||paiPath == ""){
			return null;
		}
		//得到该玩家当前的手牌	
		List<Desk> deskList = (List<Desk>) request.getServletContext().getAttribute("deskList");
		Desk desk = deskList.get(deskNo); 
		LinkedList<String> paiList = desk.pais[weizhi];	
		
		String[] paiPaths = paiPath.split("link");
		
		String path = "";
		
		for(int i = 0;i<paiPaths.length;i++){
			
			String chu = paiPaths[i];
			
			//System.out.println("出牌的路径"+chu);
			for (int j = 0; j < paiList.size(); j++) {
				
				String yuan = paiList.get(j);
				
				//System.out.println("原牌的路径"+yuan);
				//牌路径的后8为相同即为同一张牌
				if(yuan.substring(yuan.lastIndexOf("/")).equals(chu.substring(chu.lastIndexOf("/")))){
					
					//System.out.println(weizhi+"牌相同");
					paiList.remove(j);
				}
			}
			path += chu+"link";
		}
		messageMap.put("paiPath",path);
		
		//更新当前玩家的牌数
		//得到所有玩家的牌数
		ArrayList<int[]> paiShuList=(ArrayList<int[]>) request.getServletContext().getAttribute("paiShuList");
		
		int[] paiShu = paiShuList.get(user.deskNo);
		
		paiShu[weizhi] = paiShu[weizhi]-paiPaths.length;
		
		if(paiShu[weizhi] == 0){
			//记录获胜玩家的位置
			messageMap.put("winner", weizhi+"");
			state = "2";
		}
		//把游戏状态存起来
		messageMap.put("state", state);
		
		return null;
	}
}