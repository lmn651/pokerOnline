/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.hks.struts.action;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.han.domain.Desk;
import com.han.domain.Pai;
import com.han.domain.User;
import com.han.service.DeskService;
import com.han.service.PaiService;
import com.han.service.UserService;

/**
 * MyEclipse Struts Creation date: 02-10-2017
 * 
 * XDoclet definition:
 * 
 * @struts.action parameter="flag"
 */
public class GameAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		// 得到当前用户
		User user = (User) request.getSession().getAttribute("user");
		//先判断用户是否是在游戏中点击了刷新
		if("c".equals(user.getFlag())){
			System.out.println(user.weizhi+"重新刷新了");
			return mapping.findForward("fapai");
		}
		
		System.out.println(user.getName()+"进入gameAction"+user.getFlag());
		// 得到当前已准备好且进入此控制器的三个人
		User[] preUser = (User[]) request.getAttribute("preUser");
		// 首先判断这个数组中是否有玩家已经分配到了桌号
		if (user.deskNo!=-1) {
			user.setFlag("c");
			LinkedList<Desk> deskList = (LinkedList<Desk>) request.getServletContext()
					.getAttribute("deskList");
			Desk desk=deskList.get(user.deskNo);
			int weizhi=user.weizhi;
			LinkedList<String> diPaiList = desk.diPaiList;
			LinkedList<String> paisList = desk.pais[user.weizhi];
			request.getSession().setAttribute("weizhi", weizhi);
			request.getSession().setAttribute("diPaiList", diPaiList);
			request.getSession().setAttribute("paisList", paisList);
			return mapping.findForward("fapai");
		}
		LinkedList<Desk> deskList = (LinkedList<Desk>) request.getServletContext()
				.getAttribute("deskList");
		if (deskList == null) {
			deskList = new LinkedList<Desk>();
		}
		Desk desk = new Desk();
		LinkedList<Pai> paiList = PaiService.getPoke();
		LinkedList<LinkedList<String>> zongList = PaiService.daLuan(paiList);
		desk.pais[0] = zongList.pop();
		desk.pais[1] = zongList.pop();
		desk.pais[2] = zongList.pop();
		desk.diPaiList = zongList.pop();
		// 发完牌后把桌子中的isPai属性置为true,表示已经发完牌
		desk.isPai = true;
		// 将当前deskList的大小即desk的位置,设置为该桌的桌号
		desk.setDeskNo(deskList.size());
		// 将数组中的玩家分配位置,并把桌号赋给数组中的玩家
		DeskService.setUserOnDesk(preUser, desk);
		//为数组中的每隔用户分配位置
		DeskService.setUserPosition(preUser);
		// 把该用户的状态置为c,表示在游戏中
		user.setFlag("c");
		deskList.add(desk);
		request.getServletContext().setAttribute("deskList", deskList);
		//为这个桌子创建一个信息空间
		List<HashMap<String, String>> messageList=(List<HashMap<String, String>>) request.getServletContext().getAttribute("messageList");
		if(messageList==null){		
			messageList=new ArrayList<HashMap<String,String>>();
		}
		HashMap<String,String> map=new HashMap<String, String>();
		//桌号即为这个map所在的位置
		messageList.add(desk.getDeskNo(), map);
		request.getServletContext().setAttribute("messageList", messageList);
		
		//为当前玩家准备数据以及底牌
		int weizhi=user.weizhi;
		LinkedList<String> diPaiList = desk.diPaiList;
		LinkedList<String> paisList = desk.pais[user.weizhi];
		request.getSession().setAttribute("weizhi", weizhi);
		request.getSession().setAttribute("diPaiList", diPaiList);
		request.getSession().setAttribute("paisList", paisList);
		int[] paiShu=new int[]{17,17,17};
		ArrayList<int[]> paiShuList=new ArrayList<int[]>();
		paiShuList.add(user.deskNo, paiShu);
		request.getServletContext().setAttribute("paiShuList", paiShuList);
		
		return mapping.findForward("fapai");
	}
}